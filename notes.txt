
TODO :
Brancher commandes : WHO, QUIT, PASS, USER, NICK
CURRENTLY : MODE, KICK
TO TEST : INVITE, PART
DO DID DONE : TOPIC, JOIN, PRIVMSG
Mettre des try catch quand acces en [] a des aprams optionnels

Commands :
PRIVMSG, USER, NICK, JOIN, TOPIC, WHO, PART, KICK, QUIT, INVITE, PASS, MODE //currently working on

Faire headers exec pour function 
Faire message reply modes

TRAME :

1. Create classes and methods
	1.1 Create a server class
		The server class will contain all the info about the server. It will have a vector (or other container ?) of client to kep track of all the clients and manage their requests
	1.2 Create a client class
		The client class will contain of the info about a specific client inside the server

2. Create a socket and handle server signals
	
3. Use poll (or epoll ?) function to check if an event as occurred
4. If the event is a new client, register said client
5. If the event is the data from a client, handle said event


serverTesting explained :

First we handle signal to be able to close the server

servInit : 
	*Variables : 
		-Vector of the pollfd struct (the struct is used for monitoring the fd for I/O events, usually used with poll())
		-The port the server will be listening on
		-The fd of the server
		-struct sockaddr_in which describe a IPv4 address and port number combinaison

	We set all variables with appropriate value. See comments in code for futher explainations.


nc -C 0.0.0.0 4444 :
		-C for nc to add \n\r 
		0.0.0.0 IP 
		4444 Port


NICK alex
USER alexie
JOIN #test
TOPIC #test